---
import Footer from '@/components/Footer.astro'
import Topbar from '@/components/Topbar.astro'
import { ViewTransitions } from 'astro:transitions'
interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body
    class='relative h-dvh antialiased overflow-x-hidden dark:text-ivory dark:bg-dark bg-white'
  >
    <div class='min-h-screen flex flex-col gap-2'>
      <Topbar />
      <main class='flex-1 mx-4'>
        <slot />
      </main>

      <Footer />
    </div>

    <style is:global>
      :root {
        --accent: 136, 58, 234;
        --accent-light: 224, 204, 250;
        --accent-dark: 49, 10, 101;
        --accent-gradient: linear-gradient(
          45deg,
          rgb(var(--accent)),
          rgb(var(--accent-light)) 30%,
          white 60%
        );
      }
      html {
        font-family: system-ui, sans-serif;
        background: #13151a;
        background-size: 224px;
      }
      code {
        font-family:
          Menlo,
          Monaco,
          Lucida Console,
          Liberation Mono,
          DejaVu Sans Mono,
          Bitstream Vera Sans Mono,
          Courier New,
          monospace;
      }
    </style>
    <script is:inline>
      function setDarkMode(document) {
        if (
          localStorage.theme === 'dark' ||
          (!('theme' in localStorage) &&
            window.matchMedia('(prefers-color-scheme: dark)').matches)
        ) {
          document.documentElement.classList.add('dark')
        } else {
          document.documentElement.classList.remove('dark')
        }
      }
      setDarkMode(document)

      document.addEventListener('astro:before-swap', (ev) => {
        // Pass the incoming document to set the theme on it
        setDarkMode(ev.newDocument)
      })
    </script>
  </body>
</html>
